name: Frontend CD

on:
  push:
    branches: [main]
    
env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/frontend-server
  VERSION: ${{ github.sha }}
  NAME: frontend-server
  
jobs:
  #build:
  start-kind:
    name: Build
    #runs-on: ubuntu-latest
    runs-on: actuated-aarch64
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
        
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
            
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
      
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          pwd
          npm ci
            
      - name: Create .env.production for CD Deploy
        run: |
          pwd
          echo "VUE_APP_BASE_URL=$CD_DEPLOY_CONFIG" >> .env.production
          #echo ${{ secrets.CD_DEPLOY_CONFIG }} > .env.production
          cat .env.production
          
      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
          restore-keys: |
            ${{ runner.os }}-buildx-
          
      ## docker buildx --build-arg VUE_APP_BASE_URL=${{ secrets.CD_DEPLOY_CONFIG }}
      - name: Build and push Docker image
        run: |
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker buildx create --name arm64builder --use
          #docker buildx build --platform linux/amd64,linux/arm64 --build-arg VUE_APP_BASE_URL=${{ secrets.CD_DEPLOY_CONFIG }} -f Dockerfile -t ghcr.io/silenc3502/frontend-server:latest --push .
          docker buildx build --platform linux/arm64 --build-arg VUE_APP_BASE_URL=${{ secrets.CD_DEPLOY_CONFIG }} -f Dockerfile -t ghcr.io/silenc3502/frontend-server:latest --push .
          docker logout
          
  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, deploy-frontend ]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          
      - name: Deploy to prod
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          script_stop: true
          script: |
            pwd
            ls -al
            cd automation_front
            pwd
            
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            docker pull ghcr.io/silenc3502/frontend-server:latest

            docker image prune -f
            docker logout
            
            docker-compose up -d

        
