name: Frontend CD

on:
  push:
    branches: [main]
    
env:
  DOCKER_IMAGE: ghcr.io/${{ github.actor }}/frontend-server
  VERSION: ${{ github.sha }}
  NAME: frontend-server
  
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
        
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          
      - name: Install Dependencies
        run: |
          pwd
          npm ci
            
      - name: Create .env.production for CD Deploy
        run: |
          pwd
          echo "${{ secrets.CD_DEPLOY_CONFIG }}" > .env.production
          cat .env.production
          
      ## docker build & push to production
      - name: Docker build & push to prod
        run: |
          echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker buildx create --name arm64builder --use
          docker buildx build --platform linux/amd64,linux/arm64 -f Dockerfile -t ghcr.io/silenc3502/frontend-server:latest --push .
          docker logout
          
  deploy:
    needs: build
    name: Deploy
    runs-on: self-hosted
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
          
      - name: gogosing
        run: |
          echo "docker pull ghcr.io/silenc3502/frontend-server:latest"

        
